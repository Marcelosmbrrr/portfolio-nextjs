SSR: https://blog.bitsrc.io/server-components-vs-client-components-in-next-js-13-617fe96df813#:~:text=Server%20Component%20is%20a%20component,ON%20THE%20CLIENT(browser).
Project organization: https://nextjs.org/docs/app/building-your-application/routing/colocation#project-organization-strategies

# Server Components & Client Components

Server Component is a component that is fetched and rendered ON THE SERVER, while Client Component is the one that is fetched and rendered ON THE CLIENT(browser).

# When to use Server Components

In app directory, which is a newly introduced feature in NextJS 13, server components are the default, meaning all the components and pages are rendered on the server, as long as you specify that the component should be rendered on the client side.
NextJS recommends using server components until you need to use client components. React hooks, for example useState(), useEffect(), useContext(), are only available on the client side. 
Furthermore, if you need to access browser-related things, like onClick events , window or browserAPI, you need to use the client component.

# Auth0

Create application
Go to Application quickstart tab and red the orientations
Go to Authentication and create a database service
Go to Application again and turn on the connection with the database service
Go to Users Management and create a user credential